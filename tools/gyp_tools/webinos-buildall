#! /usr/bin/env python
# -*- coding: utf-8 -*-  

#*******************************************************************************
#  Code contributed to the webinos project
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#  
#     http://www.apache.org/licenses/LICENSE-2.0
#  
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
# Copyright 2011 EPU - National Technical University of Athens
#*******************************************************************************

""" webinos-buildall is a utility that builds all module.gyp or binding.gyp files found on the directory it runs from (and its children)."""

import os
import os.path
import sys
import subprocess

def build_projects(argv):
  """ Build all module.gyp files traversing the folders"""
  toolsDir = os.path.dirname(os.path.realpath(__file__))
  if sys.platform == 'win32':
    webinosgyp = os.path.join(toolsDir,'webinos-gyp.bat');
  else:
    webinosgyp = os.path.join(toolsDir,'webinos-gyp');
  if not os.path.isfile(webinosgyp):
    print 'Could not locate webinos-gyp in %s' % webinosgyp
    return False
  else:
    print "Located webinos-gyp in %s" % webinosgyp
    for root, dirs, files in os.walk(os.getcwd()): # Walk directory tree
      for f in files:
        if f.lower() == 'module.gyp' or f.lower() == 'binding.gyp':
          print "Found a %s file in %s" % (f, root)
          os.chdir(root)
          subprocess.call(["%s" % webinosgyp,"make"])		  
  return True
  
if __name__ == '__main__':
  # If this is called directly from python, then generate_project reading the command line args
  build_projects(sys.argv[1:])