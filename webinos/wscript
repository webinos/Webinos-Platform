import sys

srcdir = '.'
blddir = './build'

def set_options(opt):
  opt.tool_options("compiler_cxx")
  opt.tool_options("compiler_cc")
  
def configure(conf):
  conf.check_tool("compiler_cxx")
  conf.check_tool("compiler_cc")
  conf.check_tool("node_addon")
  conf.check_cfg(package='bluez', args='--cflags --libs', uselib_store='BLUEZ')
  conf.check_cfg(package='openobex', args='--cflags --libs', uselib_store='OPENOBEX')
  conf.check_cfg(package='obexftp', args='--cflags --libs', uselib_store='OBEXFTP')
  if sys.platform == 'linux2' or sys.platform == 'linux3':
    conf.check_cfg(package="libssl",args='--cflags --libs', uselib_store='LDFLAGS')
    conf.check_cfg(package="gnome-keyring-1",args='--cflags --libs', uselib_store='LDFLAGS')
  elif sys.platform == 'darwin':
    conf.env.append_value('LDFLAGS',['-g','-framework','CoreFoundation','-framework','Security','-lssl','-lcrypto'])

def build(bld):
  obj = bld.new_task_gen("cxx", "shlib", "node_addon")
  obj.cflags = ["-fPIC"]
  obj.cxxflags = ["-fpermissive", "-g", "-D_FILE_OFFSET_BITS=64", "-D_LARGEFILE_SOURCE", "-Wall"]
  obj.target = "webinos"
  obj.includes = ["api/contacts/src/thunderbird_AB_parser", "api/contacts/contrib", ]
  obj.source = ["api/contacts/src/thunderbird_AB_parser/node_contacts_mork.cpp",
		"api/contacts/src/thunderbird_AB_parser/MorkAddressBook.cpp",
		"api/contacts/contrib/MorkParser.cpp",
		"api/discovery/src/bluetooth.cc",
		"common/manager/certificate_manager/src/certificate_manager.cpp",
		"common/manager/certificate_manager/src/openssl_wrapper.cpp",
		"common/manager/keystore/src/ksImpl.cpp",
		"common/manager/policy_manager/src/pm.cc",
		"common/manager/policy_manager/src/core/policymanager/PolicyManager.cpp",
		"common/manager/policy_manager/src/core/policymanager/Condition.cpp",
		"common/manager/policy_manager/src/core/policymanager/Globals.cpp",
		"common/manager/policy_manager/src/core/policymanager/IPolicyBase.cpp",
		"common/manager/policy_manager/src/core/policymanager/Policy.cpp",
		"common/manager/policy_manager/src/core/policymanager/PolicySet.cpp",
		"common/manager/policy_manager/src/core/policymanager/Request.cpp",
		"common/manager/policy_manager/src/core/policymanager/Rule.cpp",
		"common/manager/policy_manager/src/core/policymanager/Subject.cpp",
		"common/manager/policy_manager/src/core/common.cpp",
		"common/manager/policy_manager/contrib/xmltools/tinyxml.cpp",
		"common/manager/policy_manager/contrib/xmltools/slre.cpp",
		"common/manager/policy_manager/contrib/xmltools/tinystr.cpp",
		"common/manager/policy_manager/contrib/xmltools/tinyxmlparser.cpp",
		"common/manager/policy_manager/contrib/xmltools/tinyxmlerror.cpp"]
  if sys.platform == 'darwin':
    obj.source.append("common/manager/keystore/src/ksImpl_Darwin.cpp")
  else:
    obj.source.append("common/manager/keystore/src/ksImpl_Linux.cpp")
  obj.uselib = ['BLUEZ', 'OPENOBEX', 'OBEXFTP', 'LDFLAGS'];

