/*******************************************************************************
 * Code contributed to the webinos project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Copyright 2012 Felix-Johannes Jendrusch, Fraunhofer FOKUS
 ******************************************************************************/

var fs = require("fs")
var pathModule = require("path")

function findDependencies(path) {
  path = pathModule.resolve(path)

  while (!fs.existsSync(pathModule.join(path, "dependencies.json"))) {
    var parent = pathModule.dirname(path)
    if (parent === path) throw new Error("Cannot find 'dependencies.json'")

    path = parent
  }

  return pathModule.join(path, "dependencies.json")
}

function createEnvironment(dependencies) {
  var environment = require(dependencies)
    , prefix = pathModule.dirname(dependencies)

  environment.require = function () {
    var argsArray = Array.prototype.slice.call(arguments)
    argsArray.unshift(prefix)

    return require(pathModule.join.apply(null, argsArray))
  }

  return environment
}

module.exports = function (dirname) {
  var dependencies = findDependencies(dirname)

  var proxy = Object.create({})
  proxy.local = createEnvironment(dependencies)

  if (proxy.local.root) {
    var dirname_ = pathModule.join(pathModule.dirname(dependencies),
        proxy.local.root.location)
      , dependencies_ = findDependencies(dirname_)

    proxy.global = createEnvironment(dependencies_)
  }

  return proxy
}
